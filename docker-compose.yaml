version: "3.9"

services:
  # ---------------------------------------------
  # Redis
  # ---------------------------------------------
  redis:
    image: redis:7-alpine
    container_name: retone-api-redis
    ports:
      - "6379:6379"
    restart: always

  # ---------------------------------------------
  # Adminer para gestionar Postgres (opcional)
  # ---------------------------------------------
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql

  # ---------------------------------------------
  # API principal
  # ---------------------------------------------
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: retone-api-api
    ports:
      - "${APP_PORT}:${APP_PORT}"
    env_file:
      - .env
    depends_on:
      - redis
    restart: always

  # ---------------------------------------------
  # Worker de colas
  # ---------------------------------------------
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: retone-api-worker
    command: npm run start:worker:prod   # <- Ejecuta las tareas en modo producción usando dist/worker.js
    env_file:
      - .env
    depends_on:
      - redis
    restart: always

  # ---------------------------------------------
  # Maildev (opcional, descomentá si lo necesitás)
  # ---------------------------------------------
  # maildev:
  #   build:
  #     context: .
  #     dockerfile: maildev.Dockerfile
  #   container_name: maildev
  #   ports:
  #     - "${MAIL_CLIENT_PORT}:1080"
  #     - "${MAIL_PORT}:1025"
  #   restart: always

volumes:
  boilerplate-db:
